import torch
from ._force2d import force2d as force2d
from torch.utils.data import DataLoader, Dataset
from typing import Tuple, Union

DataTuple = Union[DataLoader[Tuple[torch.Tensor, ...]], Dataset[Tuple[torch.Tensor, ...]], Tuple[torch.Tensor, ...]]

def split_x_or_u(x_or_u: torch.Tensor, dim_x: int) -> Tuple[torch.Tensor, torch.Tensor]: ...
def split_u_or_y(u_or_y: torch.Tensor, dim_u: int) -> Tuple[torch.Tensor, torch.Tensor]: ...
def make_x_or_u(x: torch.Tensor, u: torch.Tensor) -> torch.Tensor: ...
def make_u_or_y(u: torch.Tensor, y: torch.Tensor) -> torch.Tensor: ...
def make_dataloader(data: DataTuple, batch_size: int, shuffle: bool=..., pin_memory: bool=...) -> DataLoader[Tuple[torch.Tensor, ...]]: ...
